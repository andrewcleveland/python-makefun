<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="1" tests="34" time="0.605"><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="5" name="test_non_representable_defaults" time="0.002598285675048828"></testcase><testcase classname="makefun.tests.test_create_from_signature" file="makefun/tests/test_create_from_signature.py" line="16" name="test_positional_only" time="0.0022890567779541016"><system-err>Error in generated code:
def foo(a, /, *args, **kwargs):
    return _call_handler_(a, *args, **kwargs)

</system-err></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=True]" time="0.002598285675048828"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=False]" time="0.0029942989349365234"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=True]" time="0.0029397010803222656"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=False]" time="0.003246784210205078"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=True]" time="0.0025184154510498047"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=False]" time="0.0029172897338867188"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="98" name="test_type_comments" time="0.001150369644165039"><skipped message="This test is known to fail because inspect.signature does not detect comment type hints" type="pytest.skip">makefun/tests/test_create_from_string.py:98: &lt;py._xmlgen.raw object at 0x7f0625caf5c0&gt;</skipped></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple]" time="0.002787351608276367"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star]" time="0.0027930736541748047"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args1]" time="0.002330780029296875"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args2]" time="0.0015718936920166016"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_with_type_comments_and_newlines]" time="0.0016093254089355469"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=False]" time="0.0018131732940673828"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=True]" time="0.002131223678588867"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=False]" time="0.003284454345703125"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=True]" time="0.0034224987030029297"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="52" name="test_ex_nihilo_kw_only" time="0.0025811195373535156"><system-out>def foo(b, *, a=0, **kwargs):
    return _call_handler_(b=b, a=a, **kwargs)

</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="69" name="test_from_sig_wrapper" time="0.002374887466430664"><system-out>Original Signature: (b, a=0)
New Signature: (z, b, a=0)
Generated Source :
def foo(z, b, a=0):
    return _call_handler_(z=z, b=b, a=a)

func_impl called ! z=3
foo called: b=2, a=0
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="107" name="test_helper_functions" time="0.0050623416900634766"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="124" name="test_injection" time="0.002074718475341797"><system-out>This is generic handler called by func1
called from func1 !
This is generic handler called by func2
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="141" name="test_var_length" time="0.0019981861114501953"><system-out>def foo(a=0, *args, **kwargs):
    return _call_handler_(a=a, *args, **kwargs)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="156" name="test_positional_only" time="0.001522064208984375"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="165" name="test_with_signature" time="0.001966238021850586"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="178" name="test_with_signature_none" time="0.0025315284729003906"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="194" name="test_wraps" time="0.0030121803283691406"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="230" name="test_wraps_functools" time="0.0027153491973876953"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="21" name="test_generator" time="0.002022981643676758"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="37" name="test_generator_with_signature" time="0.0013804435729980469"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="53" name="test_generator_based_coroutine" time="0.0022563934326171875"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="77" name="test_native_coroutine" time="0.13952136039733887"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="6" name="test_create_facades" time="0.003736257553100586"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="68" name="test_so_decorator" time="0.007382869720458984"><system-out>Help on function hello in module makefun.tests.test_so:

hello()

</system-out></testcase></testsuite>