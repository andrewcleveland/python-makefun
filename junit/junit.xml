<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="1" tests="33" time="0.543"><testcase classname="makefun.tests.test_create_from_signature" file="makefun/tests/test_create_from_signature.py" line="16" name="test_positional_only" time="0.0016717910766601562"><system-err>Error in generated code:
def foo(a, /, *args, **kwargs):
    return _call_handler_(a, *args, **kwargs)

</system-err></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=True]" time="0.002811908721923828"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=False]" time="0.003231048583984375"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=True]" time="0.003538370132446289"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=False]" time="0.0022230148315429688"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=True]" time="0.0020673274993896484"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=False]" time="0.0020771026611328125"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="98" name="test_type_comments" time="0.000858306884765625"><skipped message="This test is known to fail because inspect.signature does not detect comment type hints" type="pytest.skip">makefun/tests/test_create_from_string.py:98: &lt;py._xmlgen.raw object at 0x7fd1cf6b7710&gt;</skipped></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple]" time="0.0019183158874511719"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star]" time="0.0019197463989257812"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args1]" time="0.0018205642700195312"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args2]" time="0.0019805431365966797"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_with_type_comments_and_newlines]" time="0.0019330978393554688"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=False]" time="0.002163410186767578"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=True]" time="0.002111673355102539"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=False]" time="0.0019109249114990234"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=True]" time="0.0018291473388671875"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="52" name="test_ex_nihilo_kw_only" time="0.0015087127685546875"><system-out>def foo(b, *, a=0, **kwargs):
    return _call_handler_(b=b, a=a, **kwargs)

</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="69" name="test_from_sig_wrapper" time="0.0016980171203613281"><system-out>Original Signature: (b, a=0)
New Signature: (z, b, a=0)
Generated Source :
def foo(z, b, a=0):
    return _call_handler_(z=z, b=b, a=a)

func_impl called ! z=3
foo called: b=2, a=0
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="107" name="test_helper_functions" time="0.0013468265533447266"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="124" name="test_injection" time="0.0023140907287597656"><system-out>This is generic handler called by func1
called from func1 !
This is generic handler called by func2
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="141" name="test_var_length" time="0.0016732215881347656"><system-out>def foo(a=0, *args, **kwargs):
    return _call_handler_(a=a, *args, **kwargs)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="156" name="test_positional_only" time="0.001134634017944336"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="165" name="test_with_signature" time="0.001493215560913086"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="178" name="test_with_signature_none" time="0.0010602474212646484"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="194" name="test_wraps" time="0.0025925636291503906"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="230" name="test_wraps_functools" time="0.0021293163299560547"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="21" name="test_generator" time="0.0016543865203857422"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="37" name="test_generator_with_signature" time="0.0016188621520996094"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="53" name="test_generator_based_coroutine" time="0.0015943050384521484"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="77" name="test_native_coroutine" time="0.14104342460632324"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="9" name="test_create_facades" time="0.0027713775634765625"><system-out>This is generic handler called by func1
called from func1 !
This is generic handler called by func2
This is generic handler called by func3
</system-out></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="46" name="test_so_decorator" time="0.0057413578033447266"><system-out>Help on function hello in module makefun.tests.test_so:

hello()

</system-out></testcase></testsuite>