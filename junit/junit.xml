<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="1" tests="39" time="0.674"><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="16" name="test_non_representable_defaults" time="0.0026159286499023438"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="29" name="test_preserve_attributes" time="0.0022110939025878906"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="44" name="test_empty_name_in_string" time="0.0022542476654052734"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="57" name="test_same_than_wraps_basic" time="0.0032088756561279297"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="89" name="tests_wraps_sigchange" time="0.004849433898925781"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="111" name="test_qualname_when_nested" time="0.002135038375854492"></testcase><testcase classname="makefun.tests.test_create_from_signature" file="makefun/tests/test_create_from_signature.py" line="16" name="test_positional_only" time="0.0024437904357910156"><system-err>Error in generated code:
def foo(a, /, *args, **kwargs):
    return _func_impl_(a, *args, **kwargs)

</system-err></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=True]" time="0.0030345916748046875"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=False]" time="0.005245685577392578"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=True]" time="0.0025060176849365234"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=False]" time="0.0024933815002441406"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=True]" time="0.002441883087158203"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=False]" time="0.0025129318237304688"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="98" name="test_type_comments" time="0.001020669937133789"><skipped message="This test is known to fail because inspect.signature does not detect comment type hints" type="pytest.skip">makefun/tests/test_create_from_string.py:98: &lt;py._xmlgen.raw object at 0x7f7e0f074c18&gt;</skipped></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple]" time="0.0023272037506103516"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star]" time="0.0023980140686035156"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args1]" time="0.002371072769165039"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args2]" time="0.0019485950469970703"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_with_type_comments_and_newlines]" time="0.002692699432373047"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=False]" time="0.0025217533111572266"><system-out>Generated Source :
def foo(b, a=0):
    return _func_impl_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=True]" time="0.002415895462036133"><system-out>Generated Source :
def foo(b, a=0):
    return _func_impl_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=False]" time="0.002850055694580078"><system-out>Generated Source :
def foo(b, a=0):
    return _func_impl_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=True]" time="0.0027277469635009766"><system-out>Generated Source :
def foo(b, a=0):
    return _func_impl_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="52" name="test_ex_nihilo_kw_only" time="0.0021584033966064453"><system-out>def foo(b, *, a=0, **kwargs):
    return _func_impl_(b=b, a=a, **kwargs)

</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="69" name="test_from_sig_wrapper" time="0.0021588802337646484"><system-out>Original Signature: (b, a=0)
New Signature: (z, b, a=0)
Generated Source :
def foo(z, b, a=0):
    return _func_impl_(z=z, b=b, a=a)

func_impl called ! z=3
foo called: b=2, a=0
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="107" name="test_helper_functions" time="0.0017426013946533203"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="124" name="test_injection" time="0.0024695396423339844"><system-out>This is generic handler called by func1
called from func1 !
This is generic handler called by func2
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="141" name="test_var_length" time="0.0017478466033935547"><system-out>def foo(a=0, *args, **kwargs):
    return _func_impl_(a=a, *args, **kwargs)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="156" name="test_positional_only" time="0.0015175342559814453"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="165" name="test_with_signature" time="0.002226114273071289"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="178" name="test_with_signature_none" time="0.0023975372314453125"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="194" name="test_wraps" time="0.0033102035522460938"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="230" name="test_wraps_functools" time="0.002215862274169922"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="21" name="test_generator" time="0.0022573471069335938"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="37" name="test_generator_with_signature" time="0.002270936965942383"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="53" name="test_generator_based_coroutine" time="0.0015223026275634766"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="77" name="test_native_coroutine" time="0.13661742210388184"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="6" name="test_create_facades" time="0.0049479007720947266"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="68" name="test_so_decorator" time="0.006080150604248047"><system-out>Help on function hello in module makefun.tests.test_so:

hello()
    what?

</system-out></testcase></testsuite>