<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="1" tests="34" time="0.579"><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="5" name="test_non_representable_defaults" time="0.0022106170654296875"></testcase><testcase classname="makefun.tests.test_create_from_signature" file="makefun/tests/test_create_from_signature.py" line="16" name="test_positional_only" time="0.0018460750579833984"><system-err>Error in generated code:
def foo(a, /, *args, **kwargs):
    return _call_handler_(a, *args, **kwargs)

</system-err></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=True]" time="0.002741575241088867"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=False]" time="0.001971721649169922"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=True]" time="0.002246856689453125"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=False]" time="0.002192258834838867"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=True]" time="0.0022437572479248047"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=False]" time="0.0022814273834228516"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="98" name="test_type_comments" time="0.0007872581481933594"><skipped message="This test is known to fail because inspect.signature does not detect comment type hints" type="pytest.skip">makefun/tests/test_create_from_string.py:98: &lt;py._xmlgen.raw object at 0x7f716f857518&gt;</skipped></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple]" time="0.0017826557159423828"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star]" time="0.002080202102661133"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args1]" time="0.0023589134216308594"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args2]" time="0.0020017623901367188"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_with_type_comments_and_newlines]" time="0.001990079879760742"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=False]" time="0.0023164749145507812"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=True]" time="0.0019512176513671875"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=False]" time="0.0020112991333007812"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=True]" time="0.0020265579223632812"><system-out>Generated Source :
def foo(b, a=0):
    return _call_handler_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="52" name="test_ex_nihilo_kw_only" time="0.0017435550689697266"><system-out>def foo(b, *, a=0, **kwargs):
    return _call_handler_(b=b, a=a, **kwargs)

</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="69" name="test_from_sig_wrapper" time="0.001767873764038086"><system-out>Original Signature: (b, a=0)
New Signature: (z, b, a=0)
Generated Source :
def foo(z, b, a=0):
    return _call_handler_(z=z, b=b, a=a)

func_impl called ! z=3
foo called: b=2, a=0
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="107" name="test_helper_functions" time="0.0016782283782958984"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="124" name="test_injection" time="0.0018572807312011719"><system-out>This is generic handler called by func1
called from func1 !
This is generic handler called by func2
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="141" name="test_var_length" time="0.001524209976196289"><system-out>def foo(a=0, *args, **kwargs):
    return _call_handler_(a=a, *args, **kwargs)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="156" name="test_positional_only" time="0.0012083053588867188"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="165" name="test_with_signature" time="0.0017848014831542969"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="178" name="test_with_signature_none" time="0.0012612342834472656"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="194" name="test_wraps" time="0.002691507339477539"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="230" name="test_wraps_functools" time="0.0020885467529296875"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="21" name="test_generator" time="0.0014681816101074219"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="37" name="test_generator_with_signature" time="0.0015234947204589844"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="53" name="test_generator_based_coroutine" time="0.0019478797912597656"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="77" name="test_native_coroutine" time="0.15610027313232422"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="6" name="test_create_facades" time="0.003628253936767578"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="68" name="test_so_decorator" time="0.007413387298583984"><system-out>Help on function hello in module makefun.tests.test_so:

hello()

</system-out></testcase></testsuite>