<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="1" tests="39" time="0.846"><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="13" name="test_non_representable_defaults" time="0.0028934478759765625"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="26" name="test_preserve_attributes" time="0.002377033233642578"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="41" name="test_empty_name_in_string" time="0.001888275146484375"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="49" name="test_same_than_wraps_basic" time="0.0018057823181152344"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="78" name="tests_wraps_sigchange" time="0.00308990478515625"></testcase><testcase classname="makefun.tests.test_advanced" file="makefun/tests/test_advanced.py" line="97" name="test_qualname_when_nested" time="0.0018584728240966797"></testcase><testcase classname="makefun.tests.test_create_from_signature" file="makefun/tests/test_create_from_signature.py" line="16" name="test_positional_only" time="0.002447366714477539"><system-err>Error in generated code:
def foo(a, /, *args, **kwargs):
    return _func_impl_(a, *args, **kwargs)

</system-err></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=True]" time="0.002990245819091797"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=False-self_ref=False]" time="0.0036301612854003906"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=True]" time="0.002645254135131836"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=1-self_ref=False]" time="0.0033135414123535156"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=True]" time="0.0037789344787597656"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="18" name="test_basic[type_hints=2-self_ref=False]" time="0.0038955211639404297"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="98" name="test_type_comments" time="0.0005943775177001953"><skipped message="This test is known to fail because inspect.signature does not detect comment type hints" type="pytest.skip">makefun/tests/test_create_from_string.py:98: &lt;py._xmlgen.raw object at 0x7fa6bcbe04e0&gt;</skipped></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple]" time="0.0018579959869384766"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star]" time="0.004018545150756836"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args1]" time="0.001592874526977539"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_simple_with_star_args2]" time="0.0019028186798095703"></testcase><testcase classname="makefun.tests.test_create_from_string" file="makefun/tests/test_create_from_string.py" line="117" name="test_arguments[case_with_type_comments_and_newlines]" time="0.0028083324432373047"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=False]" time="0.002487659454345703"><system-out>Generated Source :
def foo(b, a=0):
    return _func_impl_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=str-decorator=True]" time="0.003429889678955078"><system-out>Generated Source :
def foo(b, a=0):
    return _func_impl_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=False]" time="0.0035076141357421875"><system-out>Generated Source :
def foo(b, a=0):
    return _func_impl_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="14" name="test_ex_nihilo[type=Signature-decorator=True]" time="0.002909421920776367"><system-out>Generated Source :
def foo(b, a=0):
    return _func_impl_(b=b, a=a)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="52" name="test_ex_nihilo_kw_only" time="0.0022499561309814453"><system-out>def foo(b, *, a=0, **kwargs):
    return _func_impl_(b=b, a=a, **kwargs)

</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="69" name="test_from_sig_wrapper" time="0.0023336410522460938"><system-out>Original Signature: (b, a=0)
New Signature: (z, b, a=0)
Generated Source :
def foo(z, b, a=0):
    return _func_impl_(z=z, b=b, a=a)

func_impl called ! z=3
foo called: b=2, a=0
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="107" name="test_helper_functions" time="0.001705169677734375"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="124" name="test_injection" time="0.002978086471557617"><system-out>This is generic handler called by func1
called from func1 !
This is generic handler called by func2
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="141" name="test_var_length" time="0.0019762516021728516"><system-out>def foo(a=0, *args, **kwargs):
    return _func_impl_(a=a, *args, **kwargs)

func_impl called !
</system-out></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="156" name="test_positional_only" time="0.0011932849884033203"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="165" name="test_with_signature" time="0.0020313262939453125"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="178" name="test_with_signature_none" time="0.0019826889038085938"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="194" name="test_wraps" time="0.0036199092864990234"></testcase><testcase classname="makefun.tests.test_doc" file="makefun/tests/test_doc.py" line="230" name="test_wraps_functools" time="0.002982616424560547"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="21" name="test_generator" time="0.001956462860107422"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="37" name="test_generator_with_signature" time="0.002516031265258789"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="53" name="test_generator_based_coroutine" time="0.002393960952758789"></testcase><testcase classname="makefun.tests.test_generators_coroutines" file="makefun/tests/test_generators_coroutines.py" line="77" name="test_native_coroutine" time="0.1555025577545166"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="6" name="test_create_facades" time="0.0036191940307617188"></testcase><testcase classname="makefun.tests.test_so" file="makefun/tests/test_so.py" line="68" name="test_so_decorator" time="0.00850820541381836"><system-out>Help on function hello in module makefun.tests.test_so:

hello()
    what?

</system-out></testcase></testsuite>